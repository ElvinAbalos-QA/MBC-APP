<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.3 (Python 3.9.2 on darwin)" generated="20211001 17:04:57.137" rpa="false" schemaversion="2">
<suite id="s1" name="Login" source="/Users/qatest/Desktop/MOBILE/MBC-APP/Tests/MBC/Android/login.robot">
<kw name="Open MBC Application" library="resources" type="SETUP">
<kw name="Open Application" library="AppiumLibrary">
<arg>http://localhost:4723/wd/hub</arg>
<arg>platformName=Android</arg>
<arg>deviceName=4SPRMFUGIRBQ4PKR</arg>
<arg>appPackage=${MBC-APPLICATION-ID}</arg>
<arg>appActivity=${MBC-APPLICATION-ACTIVITY}</arg>
<arg>automationName=Uiautomator2</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/server-args.md
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |</doc>
<status status="PASS" starttime="20211001 17:04:58.842" endtime="20211001 17:05:11.142"/>
</kw>
<status status="PASS" starttime="20211001 17:04:58.842" endtime="20211001 17:05:11.143"/>
</kw>
<test id="s1-t1" name="Login negative valid email and wrong password test case">
<kw name="Launch Application" library="AppiumLibrary" type="SETUP">
<doc>Launch application. Application can be launched while Appium session running.
This keyword can be used to launch application during test case or between test cases.</doc>
<status status="PASS" starttime="20211001 17:05:11.147" endtime="20211001 17:05:15.502"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20211001 17:05:18.504" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20211001 17:05:15.503" endtime="20211001 17:05:18.504"/>
</kw>
<kw name="Submit Login Button" library="resources">
<kw name="Run Keyword Until Success" library="resources">
<arg>Wait Until Page Contains Element</arg>
<arg>${LOGIN_BUTTON}</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5s</arg>
<arg>1s</arg>
<arg>${KW}</arg>
<arg>@{KWARGS}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>@{KWARGS}</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<status status="PASS" starttime="20211001 17:05:18.507" endtime="20211001 17:05:24.372"/>
</kw>
<status status="PASS" starttime="20211001 17:05:18.506" endtime="20211001 17:05:24.372"/>
</kw>
<status status="PASS" starttime="20211001 17:05:18.505" endtime="20211001 17:05:24.372"/>
</kw>
<kw name="Get Element Location" library="AppiumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Get element location</doc>
<msg timestamp="20211001 17:05:26.922" level="INFO">Element '//android.widget.TextView[@text='LOG IN']' location: {'x': 458, 'y': 1300} </msg>
<status status="PASS" starttime="20211001 17:05:24.372" endtime="20211001 17:05:26.922"/>
</kw>
<kw name="Run Keyword Until Success" library="resources">
<arg>Click Element</arg>
<arg>${LOGIN_BUTTON}</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5s</arg>
<arg>1s</arg>
<arg>${KW}</arg>
<arg>@{KWARGS}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="AppiumLibrary">
<arg>@{KWARGS}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20211001 17:05:26.928" level="INFO">Clicking element '//android.widget.TextView[@text='LOG IN']'.</msg>
<status status="PASS" starttime="20211001 17:05:26.924" endtime="20211001 17:05:35.106"/>
</kw>
<status status="PASS" starttime="20211001 17:05:26.923" endtime="20211001 17:05:35.106"/>
</kw>
<status status="PASS" starttime="20211001 17:05:26.922" endtime="20211001 17:05:35.106"/>
</kw>
<status status="PASS" starttime="20211001 17:05:18.505" endtime="20211001 17:05:35.106"/>
</kw>
<kw name="Sign with User" library="resources">
<arg>${USER_DETAILS}[email]</arg>
<arg>${USER_DETAILS}[wrong_password]</arg>
<kw name="Input User Email" library="resources">
<arg>${EMAIL}</arg>
<kw name="Verify Login Email Field Displayed" library="resources">
<kw name="Run Keyword Until Success" library="resources">
<arg>Wait Until Page Contains Element</arg>
<arg>${LOGIN_EMAIL_FIELD}</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5s</arg>
<arg>1s</arg>
<arg>${KW}</arg>
<arg>@{KWARGS}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>@{KWARGS}</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<status status="PASS" starttime="20211001 17:05:35.110" endtime="20211001 17:05:36.725"/>
</kw>
<status status="PASS" starttime="20211001 17:05:35.110" endtime="20211001 17:05:36.725"/>
</kw>
<status status="PASS" starttime="20211001 17:05:35.109" endtime="20211001 17:05:36.726"/>
</kw>
<status status="PASS" starttime="20211001 17:05:35.108" endtime="20211001 17:05:36.726"/>
</kw>
<kw name="Run Keyword Until Success" library="resources">
<arg>Input Text</arg>
<arg>${LOGIN_EMAIL_FIELD}</arg>
<arg>${EMAIL}</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5s</arg>
<arg>1s</arg>
<arg>${KW}</arg>
<arg>@{KWARGS}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Input Text" library="AppiumLibrary">
<arg>@{KWARGS}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<msg timestamp="20211001 17:05:36.733" level="INFO">Typing text 'bliimocheck@mailinator.com' into text field '//android.widget.EditText[@text='Email']'</msg>
<status status="PASS" starttime="20211001 17:05:36.728" endtime="20211001 17:05:42.049"/>
</kw>
<status status="PASS" starttime="20211001 17:05:36.727" endtime="20211001 17:05:42.049"/>
</kw>
<status status="PASS" starttime="20211001 17:05:36.726" endtime="20211001 17:05:42.049"/>
</kw>
<kw name="Hide Keyboard" library="AppiumLibrary">
<doc>Hides the software keyboard on the device. (optional) In iOS, use `key_name` to press
a particular key, ex. `Done`. In Android, no parameters are used.</doc>
<status status="PASS" starttime="20211001 17:05:42.049" endtime="20211001 17:05:42.153"/>
</kw>
<status status="PASS" starttime="20211001 17:05:35.108" endtime="20211001 17:05:42.153"/>
</kw>
<kw name="Input User Password" library="resources">
<arg>${USERPASSWORD}</arg>
<kw name="Run Keyword Until Success" library="resources">
<arg>Wait Until Page Contains Element</arg>
<arg>${LOGIN_PASSWORD_FIELD}</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5s</arg>
<arg>1s</arg>
<arg>${KW}</arg>
<arg>@{KWARGS}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>@{KWARGS}</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<status status="PASS" starttime="20211001 17:05:42.155" endtime="20211001 17:05:42.673"/>
</kw>
<status status="PASS" starttime="20211001 17:05:42.155" endtime="20211001 17:05:42.673"/>
</kw>
<status status="PASS" starttime="20211001 17:05:42.154" endtime="20211001 17:05:42.673"/>
</kw>
<kw name="Run Keyword Until Success" library="resources">
<arg>Input Text</arg>
<arg>${LOGIN_PASSWORD_FIELD}</arg>
<arg>${USERPASSWORD}</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5s</arg>
<arg>1s</arg>
<arg>${KW}</arg>
<arg>@{KWARGS}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Input Text" library="AppiumLibrary">
<arg>@{KWARGS}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<msg timestamp="20211001 17:05:42.678" level="INFO">Typing text 'wrongpassword' into text field '//android.widget.EditText[@text='']'</msg>
<status status="PASS" starttime="20211001 17:05:42.674" endtime="20211001 17:05:46.602"/>
</kw>
<status status="PASS" starttime="20211001 17:05:42.674" endtime="20211001 17:05:46.602"/>
</kw>
<status status="PASS" starttime="20211001 17:05:42.673" endtime="20211001 17:05:46.603"/>
</kw>
<status status="PASS" starttime="20211001 17:05:42.153" endtime="20211001 17:05:46.603"/>
</kw>
<status status="PASS" starttime="20211001 17:05:35.107" endtime="20211001 17:05:46.603"/>
</kw>
<kw name="Submit Login Button" library="resources">
<kw name="Run Keyword Until Success" library="resources">
<arg>Wait Until Page Contains Element</arg>
<arg>${LOGIN_BUTTON}</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5s</arg>
<arg>1s</arg>
<arg>${KW}</arg>
<arg>@{KWARGS}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>@{KWARGS}</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<status status="PASS" starttime="20211001 17:05:46.606" endtime="20211001 17:05:47.300"/>
</kw>
<status status="PASS" starttime="20211001 17:05:46.605" endtime="20211001 17:05:47.300"/>
</kw>
<status status="PASS" starttime="20211001 17:05:46.604" endtime="20211001 17:05:47.300"/>
</kw>
<kw name="Get Element Location" library="AppiumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Get element location</doc>
<msg timestamp="20211001 17:05:50.184" level="INFO">Element '//android.widget.TextView[@text='LOG IN']' location: {'x': 458, 'y': 1300} </msg>
<status status="PASS" starttime="20211001 17:05:47.300" endtime="20211001 17:05:50.184"/>
</kw>
<kw name="Run Keyword Until Success" library="resources">
<arg>Click Element</arg>
<arg>${LOGIN_BUTTON}</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5s</arg>
<arg>1s</arg>
<arg>${KW}</arg>
<arg>@{KWARGS}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="AppiumLibrary">
<arg>@{KWARGS}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20211001 17:05:50.190" level="INFO">Clicking element '//android.widget.TextView[@text='LOG IN']'.</msg>
<status status="PASS" starttime="20211001 17:05:50.185" endtime="20211001 17:05:54.214"/>
</kw>
<status status="PASS" starttime="20211001 17:05:50.185" endtime="20211001 17:05:54.214"/>
</kw>
<status status="PASS" starttime="20211001 17:05:50.184" endtime="20211001 17:05:54.214"/>
</kw>
<status status="PASS" starttime="20211001 17:05:46.604" endtime="20211001 17:05:54.214"/>
</kw>
<kw name="Handle Login Failed" library="resources">
<arg>${LOGIN_FAILED_INVALID_CREDENTIALS}</arg>
<kw name="Run Keyword Until Success" library="resources">
<arg>Wait Until Page Contains Element</arg>
<arg>${LOGIN_FAILED}</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5s</arg>
<arg>1s</arg>
<arg>${KW}</arg>
<arg>@{KWARGS}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>@{KWARGS}</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<status status="PASS" starttime="20211001 17:05:54.217" endtime="20211001 17:05:54.796"/>
</kw>
<status status="PASS" starttime="20211001 17:05:54.216" endtime="20211001 17:05:54.796"/>
</kw>
<status status="PASS" starttime="20211001 17:05:54.215" endtime="20211001 17:05:54.796"/>
</kw>
<kw name="Run Keyword Until Success" library="resources">
<arg>Wait Until Page Contains Element</arg>
<arg>${DISPLAY_MESSAGE}</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5s</arg>
<arg>1s</arg>
<arg>${KW}</arg>
<arg>@{KWARGS}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>@{KWARGS}</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<status status="PASS" starttime="20211001 17:05:54.797" endtime="20211001 17:05:55.755"/>
</kw>
<status status="PASS" starttime="20211001 17:05:54.797" endtime="20211001 17:05:55.755"/>
</kw>
<status status="PASS" starttime="20211001 17:05:54.796" endtime="20211001 17:05:55.755"/>
</kw>
<kw name="Run Keyword Until Success" library="resources">
<arg>Click Element</arg>
<arg>${OK_BUTTON}</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5s</arg>
<arg>1s</arg>
<arg>${KW}</arg>
<arg>@{KWARGS}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="AppiumLibrary">
<arg>@{KWARGS}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20211001 17:05:55.762" level="INFO">Clicking element '//android.widget.TextView[@text='OK']'.</msg>
<status status="PASS" starttime="20211001 17:05:55.757" endtime="20211001 17:06:02.760"/>
</kw>
<status status="PASS" starttime="20211001 17:05:55.756" endtime="20211001 17:06:02.760"/>
</kw>
<status status="PASS" starttime="20211001 17:05:55.755" endtime="20211001 17:06:02.760"/>
</kw>
<status status="PASS" starttime="20211001 17:05:54.215" endtime="20211001 17:06:02.760"/>
</kw>
<kw name="Quit Application" library="AppiumLibrary" type="TEARDOWN">
<doc>Quit application. Application can be quit while Appium session is kept alive.
This keyword can be used to close application during test case or between test cases.</doc>
<status status="PASS" starttime="20211001 17:06:02.761" endtime="20211001 17:06:05.126"/>
</kw>
<doc>This is to be able to check a negative test case for a valid email and wrong password fields.</doc>
<tag>invalid_credentials</tag>
<tag>negative</tag>
<status status="PASS" starttime="20211001 17:05:11.143" endtime="20211001 17:06:05.126"/>
</test>
<kw name="Close Application" library="AppiumLibrary" type="TEARDOWN">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" starttime="20211001 17:06:05.131" endtime="20211001 17:06:06.091"/>
</kw>
<doc>A test case for a user is able to log in and check the validation messages</doc>
<status status="PASS" starttime="20211001 17:04:57.138" endtime="20211001 17:06:06.091"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">invalid_credentials</stat>
<stat pass="1" fail="0" skip="0">negative</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Login">Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
